const express = require("express");
const passport = require("../passport");   // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π passport
const router = express.Router();

// üîó –ò–Ω–∏—Ü–∏–∞—Ü–∏—è –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Steam
router.get(
  "/steam",
  passport.authenticate("steam", { failureRedirect: process.env.FRONTEND_URL || "/" })
);

// üîó Callback –æ—Ç Steam
router.get(
  "/steam/return",
  passport.authenticate("steam", { failureRedirect: process.env.FRONTEND_URL || "/" }),
  (req, res) => {
    // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ª–æ–≥–∏–Ω–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
    res.redirect(`${process.env.FRONTEND_URL || "/"}profile`);
  }
);

// üîó –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
router.get("/me", (req, res) => {
  if (req.isAuthenticated()) {
    return res.json(req.user);
  }
  res.status(401).json({ error: "Not authenticated" });
});

// üîó –í—ã—Ö–æ–¥ –∏–∑ —Å–µ—Å—Å–∏–∏
router.get("/logout", (req, res, next) => {
  req.logout(err => {
    if (err) return next(err);
    // –û—á–∏—Å—Ç–∏–º —Å–µ—Å—Å–∏–æ–Ω–Ω—É—é –∫—É–∫—É
    res.clearCookie("connect.sid", { path: "/" });
    res.json({ message: "‚úÖ Logged out" });
  });
});

module.exports = router;
