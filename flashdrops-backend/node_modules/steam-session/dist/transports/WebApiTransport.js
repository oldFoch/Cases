"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const debug_1 = __importDefault(require("debug"));
const http_1 = require("@doctormckay/stdlib/http");
const helpers_1 = require("../helpers");
const debug = (0, debug_1.default)('steam-session:WebApiTransport');
// Assume everything is a POST request unless it's specifically listed as a GET request
const GET_REQUESTS = [
    'IAuthenticationService/GetPasswordRSAPublicKey/v1'
];
const WEBAPI_BASE = 'https://api.steampowered.com';
class WebApiTransport {
    constructor(client) {
        this._client = client;
    }
    async sendRequest(request) {
        let urlPath = `I${request.apiInterface}Service/${request.apiMethod}/v${request.apiVersion}`;
        let url = `${WEBAPI_BASE}/${urlPath}/`;
        let method = GET_REQUESTS.includes(urlPath) ? 'GET' : 'POST';
        let headers = { ...helpers_1.API_HEADERS, ...(request.headers || {}) };
        let queryString = {};
        let form = {};
        if (request.accessToken) {
            queryString.access_token = request.accessToken;
        }
        if (request.requestData && request.requestData.length > 0) {
            (method == 'GET' ? queryString : form).input_protobuf_encoded = request.requestData.toString('base64');
        }
        // For some unknown reason, the mobile app includes this in the query string for GET requests
        if (method == 'GET' && (headers.cookie || '').includes('mobileClientVersion=')) {
            queryString.origin = 'SteamMobile';
        }
        debug('%s %s %o %o', method, url, queryString, form);
        let requestOptions = {
            method,
            url,
            headers,
            queryString
        };
        if (method == 'POST' && Object.keys(form).length > 0) {
            requestOptions.multipartForm = http_1.HttpClient.simpleObjectToMultipartForm(form);
        }
        let result = await this._client.request(requestOptions);
        if (result.statusCode < 200 || result.statusCode >= 300) {
            let err = new Error(`WebAPI error ${result.statusCode}`);
            err.code = result.statusCode;
            throw err;
        }
        let apiResponse = {};
        let eresultHeader = result.headers['x-eresult'];
        let errorMessageHeader = result.headers['x-error_message'];
        if (typeof eresultHeader == 'string') {
            apiResponse.result = parseInt(eresultHeader);
        }
        if (typeof errorMessageHeader == 'string') {
            apiResponse.errorMessage = errorMessageHeader;
        }
        let resultBody = result.jsonBody || result.textBody || result.rawBody;
        let isMeaningfulJsonBody = result.jsonBody && Object.keys(result.jsonBody).length > 0;
        if (resultBody && (isMeaningfulJsonBody || resultBody.length > 0)) {
            apiResponse.responseData = resultBody;
        }
        return apiResponse;
    }
    // eslint-disable-next-line @typescript-eslint/no-empty-function
    close() { }
}
exports.default = WebApiTransport;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV2ViQXBpVHJhbnNwb3J0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3RyYW5zcG9ydHMvV2ViQXBpVHJhbnNwb3J0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsa0RBQWdDO0FBQ2hDLG1EQUF3RTtBQUt4RSx3Q0FBdUM7QUFFdkMsTUFBTSxLQUFLLEdBQUcsSUFBQSxlQUFXLEVBQUMsK0JBQStCLENBQUMsQ0FBQztBQUUzRCx1RkFBdUY7QUFDdkYsTUFBTSxZQUFZLEdBQUc7SUFDcEIsbURBQW1EO0NBQ25ELENBQUM7QUFFRixNQUFNLFdBQVcsR0FBRyw4QkFBOEIsQ0FBQztBQU9uRCxNQUFxQixlQUFlO0lBR25DLFlBQVksTUFBa0I7UUFDN0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7SUFDdkIsQ0FBQztJQUVELEtBQUssQ0FBQyxXQUFXLENBQUMsT0FBbUI7UUFDcEMsSUFBSSxPQUFPLEdBQUcsSUFBSSxPQUFPLENBQUMsWUFBWSxXQUFXLE9BQU8sQ0FBQyxTQUFTLEtBQUssT0FBTyxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQzVGLElBQUksR0FBRyxHQUFHLEdBQUcsV0FBVyxJQUFJLE9BQU8sR0FBRyxDQUFDO1FBQ3ZDLElBQUksTUFBTSxHQUFHLFlBQVksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO1FBQzdELElBQUksT0FBTyxHQUFHLEVBQUMsR0FBRyxxQkFBVyxFQUFFLEdBQUcsQ0FBQyxPQUFPLENBQUMsT0FBTyxJQUFJLEVBQUUsQ0FBQyxFQUFDLENBQUM7UUFFM0QsSUFBSSxXQUFXLEdBQU8sRUFBRSxDQUFDO1FBQ3pCLElBQUksSUFBSSxHQUFPLEVBQUUsQ0FBQztRQUVsQixJQUFJLE9BQU8sQ0FBQyxXQUFXLEVBQUU7WUFDeEIsV0FBVyxDQUFDLFlBQVksR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFD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